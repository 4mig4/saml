error_log /dev/stderr info;

events {
  worker_connections 1024;
}

http {
  lua_code_cache off;

  init_by_lua_block {
    local saml = require "resty.saml"
    local err = saml.init({
      debug = true,
      data_dir = "/usr/local/openresty/luajit/lib/luarocks/rocks/saml/dev-1/data/",
    })
    if err then
      assert(nil, err)
    end
  }

  server {
    listen 8088;

    location = /health {
      return 204;
    }

    location = / {
      content_by_lua_block { require("service_provider").home() }
    }

    location /sso {
      content_by_lua_block { require("service_provider").sso() }
    }

    location /acs {
      content_by_lua_block { require("service_provider").acs() }
    }

    location /sls {
      content_by_lua_block { require("service_provider").sls() }
    }

    location /logout {
      content_by_lua_block { require("service_provider").logout() }
    }
  }

  server {
    listen 8089;

    location = /health {
      return 204;
    }

    location /sso {
      content_by_lua_block { require("identity_provider").sso() }
    }

    location /sls {
      content_by_lua_block { require("identity_provider").sls() }
    }
  }
}
